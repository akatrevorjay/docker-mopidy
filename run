#!/bin/bash
#
# ~ start a mopidy container using sane defaults.
#
set -eo pipefail

: ${name:='mopidy'}
: ${image:='trevorj/mopidy-extras:develop'}  # remove :develop for stable (:latest)

: ${media_dir:="$(xdg-user-dir MUSIC)"}
: ${data_dir:="$(xdg-user-dir DATA)/mopidy"}
: ${config_dir:="$(xdg-user-dir CONFIG)/mopidy"}

: ${pulse_cookie_data:="$(DISPLAY="${DISPLAY:-:0.0}" pax11publish -d | grep -Po '(?<=^Cookie: ).*')"}
#: ${pulse_server:='tcp:0.0.0.0:4713'}

args=()

[[ -z "$pulse_cookie_data" ]] || args+=(-e PULSE_COOKIE_DATA="$pulse_cookie_data")
[[ -z "$pulse_server" ]] || args+=(-e PULSE_SERVER="$pulse_server")

[[ -z "$media_dir" ]]  || args+=(-v "$media_dir:$app_home/Music")
[[ -z "$data_dir" ]]   || args+=(-v "$data_dir:$app_home/.local/share/mopidy")
[[ -z "$config_dir" ]] || args+=(-v "$config_dir:$app_home/.config/mopidy")

# pull image first to minimize downtime.
$dry docker pull "$image"

# stop and remove any existing.
for i in stop rm; do $dry docker $i "$name" || :; done

# run container
$dry docker run -d \
      --name="$name" \
      --hostname="$HOST" \
      --net=host \
      "${args[@]}" \
      "$image" \
      "$@"
